{
  "version": 3,
  "sources": ["../../../../../next/src/shared/lib/image-blur-svg.ts", "../../../../../next/src/shared/lib/get-img-props.ts", "../../../../../next/src/shared/lib/image-loader.ts", "../../../../../next/src/client/use-merged-ref.ts", "../../../../../next/src/client/image-component.tsx", "../../../../../next/src/shared/lib/image-external.tsx", "../../../../../next/image.js"],
  "sourcesContent": ["/**\n * A shared function, used on both client and server, to generate a SVG blur placeholder.\n */\nexport function getImageBlurSvg({\n  widthInt,\n  heightInt,\n  blurWidth,\n  blurHeight,\n  blurDataURL,\n  objectFit,\n}: {\n  widthInt?: number\n  heightInt?: number\n  blurWidth?: number\n  blurHeight?: number\n  blurDataURL: string\n  objectFit?: string\n}): string {\n  const std = 20\n  const svgWidth = blurWidth ? blurWidth * 40 : widthInt\n  const svgHeight = blurHeight ? blurHeight * 40 : heightInt\n\n  const viewBox =\n    svgWidth && svgHeight ? `viewBox='0 0 ${svgWidth} ${svgHeight}'` : ''\n  const preserveAspectRatio = viewBox\n    ? 'none'\n    : objectFit === 'contain'\n      ? 'xMidYMid'\n      : objectFit === 'cover'\n        ? 'xMidYMid slice'\n        : 'none'\n\n  return `%3Csvg xmlns='http://www.w3.org/2000/svg' ${viewBox}%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='${std}'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='${std}'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='${preserveAspectRatio}' style='filter: url(%23b);' href='${blurDataURL}'/%3E%3C/svg%3E`\n}\n", "import { warnOnce } from './utils/warn-once'\nimport { getImageBlurSvg } from './image-blur-svg'\nimport { imageConfigDefault } from './image-config'\nimport type {\n  ImageConfigComplete,\n  ImageLoaderProps,\n  ImageLoaderPropsWithConfig,\n} from './image-config'\n\nimport type { CSSProperties, JSX } from 'react'\n\nexport interface StaticImageData {\n  src: string\n  height: number\n  width: number\n  blurDataURL?: string\n  blurWidth?: number\n  blurHeight?: number\n}\n\nexport interface StaticRequire {\n  default: StaticImageData\n}\n\nexport type StaticImport = StaticRequire | StaticImageData\n\nexport type ImageProps = Omit<\n  JSX.IntrinsicElements['img'],\n  'src' | 'srcSet' | 'ref' | 'alt' | 'width' | 'height' | 'loading'\n> & {\n  src: string | StaticImport\n  alt: string\n  width?: number | `${number}`\n  height?: number | `${number}`\n  fill?: boolean\n  loader?: ImageLoader\n  quality?: number | `${number}`\n  priority?: boolean\n  loading?: LoadingValue\n  placeholder?: PlaceholderValue\n  blurDataURL?: string\n  unoptimized?: boolean\n  overrideSrc?: string\n  /**\n   * @deprecated Use `onLoad` instead.\n   * @see https://nextjs.org/docs/app/api-reference/components/image#onload\n   */\n  onLoadingComplete?: OnLoadingComplete\n  /**\n   * @deprecated Use `fill` prop instead of `layout=\"fill\"` or change import to `next/legacy/image`.\n   * @see https://nextjs.org/docs/api-reference/next/legacy/image\n   */\n  layout?: string\n  /**\n   * @deprecated Use `style` prop instead.\n   */\n  objectFit?: string\n  /**\n   * @deprecated Use `style` prop instead.\n   */\n  objectPosition?: string\n  /**\n   * @deprecated This prop does not do anything.\n   */\n  lazyBoundary?: string\n  /**\n   * @deprecated This prop does not do anything.\n   */\n  lazyRoot?: string\n}\n\nexport type ImgProps = Omit<ImageProps, 'src' | 'loader'> & {\n  loading: LoadingValue\n  width: number | undefined\n  height: number | undefined\n  style: NonNullable<JSX.IntrinsicElements['img']['style']>\n  sizes: string | undefined\n  srcSet: string | undefined\n  src: string\n}\n\nconst VALID_LOADING_VALUES = ['lazy', 'eager', undefined] as const\n\n// Object-fit values that are not valid background-size values\nconst INVALID_BACKGROUND_SIZE_VALUES = [\n  '-moz-initial',\n  'fill',\n  'none',\n  'scale-down',\n  undefined,\n]\ntype LoadingValue = (typeof VALID_LOADING_VALUES)[number]\ntype ImageConfig = ImageConfigComplete & {\n  allSizes: number[]\n  output?: 'standalone' | 'export'\n}\n\nexport type ImageLoader = (p: ImageLoaderProps) => string\n\n// Do not export - this is an internal type only\n// because `next.config.js` is only meant for the\n// built-in loaders, not for a custom loader() prop.\ntype ImageLoaderWithConfig = (p: ImageLoaderPropsWithConfig) => string\n\nexport type PlaceholderValue = 'blur' | 'empty' | `data:image/${string}`\nexport type OnLoad = React.ReactEventHandler<HTMLImageElement> | undefined\nexport type OnLoadingComplete = (img: HTMLImageElement) => void\n\nexport type PlaceholderStyle = Partial<\n  Pick<\n    CSSProperties,\n    | 'backgroundSize'\n    | 'backgroundPosition'\n    | 'backgroundRepeat'\n    | 'backgroundImage'\n  >\n>\n\nfunction isStaticRequire(\n  src: StaticRequire | StaticImageData\n): src is StaticRequire {\n  return (src as StaticRequire).default !== undefined\n}\n\nfunction isStaticImageData(\n  src: StaticRequire | StaticImageData\n): src is StaticImageData {\n  return (src as StaticImageData).src !== undefined\n}\n\nfunction isStaticImport(src: string | StaticImport): src is StaticImport {\n  return (\n    !!src &&\n    typeof src === 'object' &&\n    (isStaticRequire(src as StaticImport) ||\n      isStaticImageData(src as StaticImport))\n  )\n}\n\nconst allImgs = new Map<\n  string,\n  { src: string; priority: boolean; placeholder: PlaceholderValue }\n>()\nlet perfObserver: PerformanceObserver | undefined\n\nfunction getInt(x: unknown): number | undefined {\n  if (typeof x === 'undefined') {\n    return x\n  }\n  if (typeof x === 'number') {\n    return Number.isFinite(x) ? x : NaN\n  }\n  if (typeof x === 'string' && /^[0-9]+$/.test(x)) {\n    return parseInt(x, 10)\n  }\n  return NaN\n}\n\nfunction getWidths(\n  { deviceSizes, allSizes }: ImageConfig,\n  width: number | undefined,\n  sizes: string | undefined\n): { widths: number[]; kind: 'w' | 'x' } {\n  if (sizes) {\n    // Find all the \"vw\" percent sizes used in the sizes prop\n    const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g\n    const percentSizes = []\n    for (let match; (match = viewportWidthRe.exec(sizes)); match) {\n      percentSizes.push(parseInt(match[2]))\n    }\n    if (percentSizes.length) {\n      const smallestRatio = Math.min(...percentSizes) * 0.01\n      return {\n        widths: allSizes.filter((s) => s >= deviceSizes[0] * smallestRatio),\n        kind: 'w',\n      }\n    }\n    return { widths: allSizes, kind: 'w' }\n  }\n  if (typeof width !== 'number') {\n    return { widths: deviceSizes, kind: 'w' }\n  }\n\n  const widths = [\n    ...new Set(\n      // > This means that most OLED screens that say they are 3x resolution,\n      // > are actually 3x in the green color, but only 1.5x in the red and\n      // > blue colors. Showing a 3x resolution image in the app vs a 2x\n      // > resolution image will be visually the same, though the 3x image\n      // > takes significantly more data. Even true 3x resolution screens are\n      // > wasteful as the human eye cannot see that level of detail without\n      // > something like a magnifying glass.\n      // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n      [width, width * 2 /*, width * 3*/].map(\n        (w) => allSizes.find((p) => p >= w) || allSizes[allSizes.length - 1]\n      )\n    ),\n  ]\n  return { widths, kind: 'x' }\n}\n\ntype GenImgAttrsData = {\n  config: ImageConfig\n  src: string\n  unoptimized: boolean\n  loader: ImageLoaderWithConfig\n  width?: number\n  quality?: number\n  sizes?: string\n}\n\ntype GenImgAttrsResult = {\n  src: string\n  srcSet: string | undefined\n  sizes: string | undefined\n}\n\nfunction generateImgAttrs({\n  config,\n  src,\n  unoptimized,\n  width,\n  quality,\n  sizes,\n  loader,\n}: GenImgAttrsData): GenImgAttrsResult {\n  if (unoptimized) {\n    return { src, srcSet: undefined, sizes: undefined }\n  }\n\n  const { widths, kind } = getWidths(config, width, sizes)\n  const last = widths.length - 1\n\n  return {\n    sizes: !sizes && kind === 'w' ? '100vw' : sizes,\n    srcSet: widths\n      .map(\n        (w, i) =>\n          `${loader({ config, src, quality, width: w })} ${\n            kind === 'w' ? w : i + 1\n          }${kind}`\n      )\n      .join(', '),\n\n    // It's intended to keep `src` the last attribute because React updates\n    // attributes in order. If we keep `src` the first one, Safari will\n    // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n    // updated by React. That causes multiple unnecessary requests if `srcSet`\n    // and `sizes` are defined.\n    // This bug cannot be reproduced in Chrome or Firefox.\n    src: loader({ config, src, quality, width: widths[last] }),\n  }\n}\n\n/**\n * A shared function, used on both client and server, to generate the props for <img>.\n */\nexport function getImgProps(\n  {\n    src,\n    sizes,\n    unoptimized = false,\n    priority = false,\n    loading,\n    className,\n    quality,\n    width,\n    height,\n    fill = false,\n    style,\n    overrideSrc,\n    onLoad,\n    onLoadingComplete,\n    placeholder = 'empty',\n    blurDataURL,\n    fetchPriority,\n    decoding = 'async',\n    layout,\n    objectFit,\n    objectPosition,\n    lazyBoundary,\n    lazyRoot,\n    ...rest\n  }: ImageProps,\n  _state: {\n    defaultLoader: ImageLoaderWithConfig\n    imgConf: ImageConfigComplete\n    showAltText?: boolean\n    blurComplete?: boolean\n  }\n): {\n  props: ImgProps\n  meta: {\n    unoptimized: boolean\n    priority: boolean\n    placeholder: NonNullable<ImageProps['placeholder']>\n    fill: boolean\n  }\n} {\n  const { imgConf, showAltText, blurComplete, defaultLoader } = _state\n  let config: ImageConfig\n  let c = imgConf || imageConfigDefault\n  if ('allSizes' in c) {\n    config = c as ImageConfig\n  } else {\n    const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b)\n    const deviceSizes = c.deviceSizes.sort((a, b) => a - b)\n    const qualities = c.qualities?.sort((a, b) => a - b)\n    config = { ...c, allSizes, deviceSizes, qualities }\n  }\n\n  if (typeof defaultLoader === 'undefined') {\n    throw new Error(\n      'images.loaderFile detected but the file is missing default export.\\nRead more: https://nextjs.org/docs/messages/invalid-images-config'\n    )\n  }\n  let loader: ImageLoaderWithConfig = rest.loader || defaultLoader\n\n  // Remove property so it's not spread on <img> element\n  delete rest.loader\n  delete (rest as any).srcSet\n\n  // This special value indicates that the user\n  // didn't define a \"loader\" prop or \"loader\" config.\n  const isDefaultLoader = '__next_img_default' in loader\n\n  if (isDefaultLoader) {\n    if (config.loader === 'custom') {\n      throw new Error(\n        `Image with src \"${src}\" is missing \"loader\" prop.` +\n          `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader`\n      )\n    }\n  } else {\n    // The user defined a \"loader\" prop or config.\n    // Since the config object is internal only, we\n    // must not pass it to the user-defined \"loader\".\n    const customImageLoader = loader as ImageLoader\n    loader = (obj) => {\n      const { config: _, ...opts } = obj\n      return customImageLoader(opts)\n    }\n  }\n\n  if (layout) {\n    if (layout === 'fill') {\n      fill = true\n    }\n    const layoutToStyle: Record<string, Record<string, string> | undefined> = {\n      intrinsic: { maxWidth: '100%', height: 'auto' },\n      responsive: { width: '100%', height: 'auto' },\n    }\n    const layoutToSizes: Record<string, string | undefined> = {\n      responsive: '100vw',\n      fill: '100vw',\n    }\n    const layoutStyle = layoutToStyle[layout]\n    if (layoutStyle) {\n      style = { ...style, ...layoutStyle }\n    }\n    const layoutSizes = layoutToSizes[layout]\n    if (layoutSizes && !sizes) {\n      sizes = layoutSizes\n    }\n  }\n\n  let staticSrc = ''\n  let widthInt = getInt(width)\n  let heightInt = getInt(height)\n  let blurWidth: number | undefined\n  let blurHeight: number | undefined\n  if (isStaticImport(src)) {\n    const staticImageData = isStaticRequire(src) ? src.default : src\n\n    if (!staticImageData.src) {\n      throw new Error(\n        `An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(\n          staticImageData\n        )}`\n      )\n    }\n    if (!staticImageData.height || !staticImageData.width) {\n      throw new Error(\n        `An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(\n          staticImageData\n        )}`\n      )\n    }\n\n    blurWidth = staticImageData.blurWidth\n    blurHeight = staticImageData.blurHeight\n    blurDataURL = blurDataURL || staticImageData.blurDataURL\n    staticSrc = staticImageData.src\n\n    if (!fill) {\n      if (!widthInt && !heightInt) {\n        widthInt = staticImageData.width\n        heightInt = staticImageData.height\n      } else if (widthInt && !heightInt) {\n        const ratio = widthInt / staticImageData.width\n        heightInt = Math.round(staticImageData.height * ratio)\n      } else if (!widthInt && heightInt) {\n        const ratio = heightInt / staticImageData.height\n        widthInt = Math.round(staticImageData.width * ratio)\n      }\n    }\n  }\n  src = typeof src === 'string' ? src : staticSrc\n\n  let isLazy =\n    !priority && (loading === 'lazy' || typeof loading === 'undefined')\n  if (!src || src.startsWith('data:') || src.startsWith('blob:')) {\n    // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n    unoptimized = true\n    isLazy = false\n  }\n  if (config.unoptimized) {\n    unoptimized = true\n  }\n  if (\n    isDefaultLoader &&\n    !config.dangerouslyAllowSVG &&\n    src.split('?', 1)[0].endsWith('.svg')\n  ) {\n    // Special case to make svg serve as-is to avoid proxying\n    // through the built-in Image Optimization API.\n    unoptimized = true\n  }\n\n  const qualityInt = getInt(quality)\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (config.output === 'export' && isDefaultLoader && !unoptimized) {\n      throw new Error(\n        `Image Optimization using the default loader is not compatible with \\`{ output: 'export' }\\`.\n  Possible solutions:\n    - Remove \\`{ output: 'export' }\\` and run \"next start\" to run server mode including the Image Optimization API.\n    - Configure \\`{ images: { unoptimized: true } }\\` in \\`next.config.js\\` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api`\n      )\n    }\n    if (!src) {\n      // React doesn't show the stack trace and there's\n      // no `src` to help identify which image, so we\n      // instead console.error(ref) during mount.\n      unoptimized = true\n    } else {\n      if (fill) {\n        if (width) {\n          throw new Error(\n            `Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`\n          )\n        }\n        if (height) {\n          throw new Error(\n            `Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`\n          )\n        }\n        if (style?.position && style.position !== 'absolute') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`\n          )\n        }\n        if (style?.width && style.width !== '100%') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`\n          )\n        }\n        if (style?.height && style.height !== '100%') {\n          throw new Error(\n            `Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`\n          )\n        }\n      } else {\n        if (typeof widthInt === 'undefined') {\n          throw new Error(\n            `Image with src \"${src}\" is missing required \"width\" property.`\n          )\n        } else if (isNaN(widthInt)) {\n          throw new Error(\n            `Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`\n          )\n        }\n        if (typeof heightInt === 'undefined') {\n          throw new Error(\n            `Image with src \"${src}\" is missing required \"height\" property.`\n          )\n        } else if (isNaN(heightInt)) {\n          throw new Error(\n            `Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`\n          )\n        }\n        // eslint-disable-next-line no-control-regex\n        if (/^[\\x00-\\x20]/.test(src)) {\n          throw new Error(\n            `Image with src \"${src}\" cannot start with a space or control character. Use src.trimStart() to remove it or encodeURIComponent(src) to keep it.`\n          )\n        }\n        // eslint-disable-next-line no-control-regex\n        if (/[\\x00-\\x20]$/.test(src)) {\n          throw new Error(\n            `Image with src \"${src}\" cannot end with a space or control character. Use src.trimEnd() to remove it or encodeURIComponent(src) to keep it.`\n          )\n        }\n      }\n    }\n    if (!VALID_LOADING_VALUES.includes(loading)) {\n      throw new Error(\n        `Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(\n          String\n        ).join(',')}.`\n      )\n    }\n    if (priority && loading === 'lazy') {\n      throw new Error(\n        `Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`\n      )\n    }\n    if (\n      placeholder !== 'empty' &&\n      placeholder !== 'blur' &&\n      !placeholder.startsWith('data:image/')\n    ) {\n      throw new Error(\n        `Image with src \"${src}\" has invalid \"placeholder\" property \"${placeholder}\".`\n      )\n    }\n    if (placeholder !== 'empty') {\n      if (widthInt && heightInt && widthInt * heightInt < 1600) {\n        warnOnce(\n          `Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder\" property to improve performance.`\n        )\n      }\n    }\n    if (placeholder === 'blur' && !blurDataURL) {\n      const VALID_BLUR_EXT = ['jpeg', 'png', 'webp', 'avif'] // should match next-image-loader\n\n      throw new Error(\n        `Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n        Possible solutions:\n          - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n          - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(\n            ','\n          )} (animated images not supported)\n          - Remove the \"placeholder\" property, effectively no blur effect\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`\n      )\n    }\n    if ('ref' in rest) {\n      warnOnce(\n        `Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoad\" property instead.`\n      )\n    }\n\n    if (!unoptimized && !isDefaultLoader) {\n      const urlStr = loader({\n        config,\n        src,\n        width: widthInt || 400,\n        quality: qualityInt || 75,\n      })\n      let url: URL | undefined\n      try {\n        url = new URL(urlStr)\n      } catch (err) {}\n      if (urlStr === src || (url && url.pathname === src && !url.search)) {\n        warnOnce(\n          `Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` +\n            `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`\n        )\n      }\n    }\n\n    if (onLoadingComplete) {\n      warnOnce(\n        `Image with src \"${src}\" is using deprecated \"onLoadingComplete\" property. Please use the \"onLoad\" property instead.`\n      )\n    }\n\n    for (const [legacyKey, legacyValue] of Object.entries({\n      layout,\n      objectFit,\n      objectPosition,\n      lazyBoundary,\n      lazyRoot,\n    })) {\n      if (legacyValue) {\n        warnOnce(\n          `Image with src \"${src}\" has legacy prop \"${legacyKey}\". Did you forget to run the codemod?` +\n            `\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13`\n        )\n      }\n    }\n\n    if (\n      typeof window !== 'undefined' &&\n      !perfObserver &&\n      window.PerformanceObserver\n    ) {\n      perfObserver = new PerformanceObserver((entryList) => {\n        for (const entry of entryList.getEntries()) {\n          // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n          const imgSrc = entry?.element?.src || ''\n          const lcpImage = allImgs.get(imgSrc)\n          if (\n            lcpImage &&\n            !lcpImage.priority &&\n            lcpImage.placeholder === 'empty' &&\n            !lcpImage.src.startsWith('data:') &&\n            !lcpImage.src.startsWith('blob:')\n          ) {\n            // https://web.dev/lcp/#measure-lcp-in-javascript\n            warnOnce(\n              `Image with src \"${lcpImage.src}\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.` +\n                `\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority`\n            )\n          }\n        }\n      })\n      try {\n        perfObserver.observe({\n          type: 'largest-contentful-paint',\n          buffered: true,\n        })\n      } catch (err) {\n        // Log error but don't crash the app\n        console.error(err)\n      }\n    }\n  }\n  const imgStyle = Object.assign(\n    fill\n      ? {\n          position: 'absolute',\n          height: '100%',\n          width: '100%',\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0,\n          objectFit,\n          objectPosition,\n        }\n      : {},\n    showAltText ? {} : { color: 'transparent' },\n    style\n  )\n\n  const backgroundImage =\n    !blurComplete && placeholder !== 'empty'\n      ? placeholder === 'blur'\n        ? `url(\"data:image/svg+xml;charset=utf-8,${getImageBlurSvg({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL: blurDataURL || '', // assume not undefined\n            objectFit: imgStyle.objectFit,\n          })}\")`\n        : `url(\"${placeholder}\")` // assume `data:image/`\n      : null\n\n  const backgroundSize = !INVALID_BACKGROUND_SIZE_VALUES.includes(\n    imgStyle.objectFit\n  )\n    ? imgStyle.objectFit\n    : imgStyle.objectFit === 'fill'\n      ? '100% 100%' // the background-size equivalent of `fill`\n      : 'cover'\n\n  let placeholderStyle: PlaceholderStyle = backgroundImage\n    ? {\n        backgroundSize,\n        backgroundPosition: imgStyle.objectPosition || '50% 50%',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage,\n      }\n    : {}\n\n  if (process.env.NODE_ENV === 'development') {\n    if (\n      placeholderStyle.backgroundImage &&\n      placeholder === 'blur' &&\n      blurDataURL?.startsWith('/')\n    ) {\n      // During `next dev`, we don't want to generate blur placeholders with webpack\n      // because it can delay starting the dev server. Instead, `next-image-loader.js`\n      // will inline a special url to lazily generate the blur placeholder at request time.\n      placeholderStyle.backgroundImage = `url(\"${blurDataURL}\")`\n    }\n  }\n\n  const imgAttributes = generateImgAttrs({\n    config,\n    src,\n    unoptimized,\n    width: widthInt,\n    quality: qualityInt,\n    sizes,\n    loader,\n  })\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window !== 'undefined') {\n      let fullUrl: URL\n      try {\n        fullUrl = new URL(imgAttributes.src)\n      } catch (e) {\n        fullUrl = new URL(imgAttributes.src, window.location.href)\n      }\n      allImgs.set(fullUrl.href, { src, priority, placeholder })\n    }\n  }\n\n  const props: ImgProps = {\n    ...rest,\n    loading: isLazy ? 'lazy' : loading,\n    fetchPriority,\n    width: widthInt,\n    height: heightInt,\n    decoding,\n    className,\n    style: { ...imgStyle, ...placeholderStyle },\n    sizes: imgAttributes.sizes,\n    srcSet: imgAttributes.srcSet,\n    src: overrideSrc || imgAttributes.src,\n  }\n  const meta = { unoptimized, priority, placeholder, fill }\n  return { props, meta }\n}\n", "import type { ImageLoaderPropsWithConfig } from './image-config'\n\nconst DEFAULT_Q = 75\n\nfunction defaultLoader({\n  config,\n  src,\n  width,\n  quality,\n}: ImageLoaderPropsWithConfig): string {\n  if (process.env.NODE_ENV !== 'production') {\n    const missingValues = []\n\n    // these should always be provided but make sure they are\n    if (!src) missingValues.push('src')\n    if (!width) missingValues.push('width')\n\n    if (missingValues.length > 0) {\n      throw new Error(\n        `Next Image Optimization requires ${missingValues.join(\n          ', '\n        )} to be provided. Make sure you pass them as props to the \\`next/image\\` component. Received: ${JSON.stringify(\n          { src, width, quality }\n        )}`\n      )\n    }\n\n    if (src.startsWith('//')) {\n      throw new Error(\n        `Failed to parse src \"${src}\" on \\`next/image\\`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)`\n      )\n    }\n\n    if (src.startsWith('/') && config.localPatterns) {\n      if (\n        process.env.NODE_ENV !== 'test' &&\n        // micromatch isn't compatible with edge runtime\n        process.env.NEXT_RUNTIME !== 'edge'\n      ) {\n        // We use dynamic require because this should only error in development\n        const { hasLocalMatch } = require('./match-local-pattern')\n        if (!hasLocalMatch(config.localPatterns, src)) {\n          throw new Error(\n            `Invalid src prop (${src}) on \\`next/image\\` does not match \\`images.localPatterns\\` configured in your \\`next.config.js\\`\\n` +\n              `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-localpatterns`\n          )\n        }\n      }\n    }\n\n    if (!src.startsWith('/') && (config.domains || config.remotePatterns)) {\n      let parsedSrc: URL\n      try {\n        parsedSrc = new URL(src)\n      } catch (err) {\n        console.error(err)\n        throw new Error(\n          `Failed to parse src \"${src}\" on \\`next/image\\`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)`\n        )\n      }\n\n      if (\n        process.env.NODE_ENV !== 'test' &&\n        // micromatch isn't compatible with edge runtime\n        process.env.NEXT_RUNTIME !== 'edge'\n      ) {\n        // We use dynamic require because this should only error in development\n        const { hasRemoteMatch } = require('./match-remote-pattern')\n        if (!hasRemoteMatch(config.domains, config.remotePatterns, parsedSrc)) {\n          throw new Error(\n            `Invalid src prop (${src}) on \\`next/image\\`, hostname \"${parsedSrc.hostname}\" is not configured under images in your \\`next.config.js\\`\\n` +\n              `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host`\n          )\n        }\n      }\n    }\n\n    if (quality && config.qualities && !config.qualities.includes(quality)) {\n      throw new Error(\n        `Invalid quality prop (${quality}) on \\`next/image\\` does not match \\`images.qualities\\` configured in your \\`next.config.js\\`\\n` +\n          `See more info: https://nextjs.org/docs/messages/next-image-unconfigured-qualities`\n      )\n    }\n  }\n\n  const q =\n    quality ||\n    config.qualities?.reduce((prev, cur) =>\n      Math.abs(cur - DEFAULT_Q) < Math.abs(prev - DEFAULT_Q) ? cur : prev\n    ) ||\n    DEFAULT_Q\n\n  return `${config.path}?url=${encodeURIComponent(src)}&w=${width}&q=${q}${\n    src.startsWith('/_next/static/media/') && process.env.NEXT_DEPLOYMENT_ID\n      ? `&dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n      : ''\n  }`\n}\n\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true\n\nexport default defaultLoader\n", "import { useCallback, useRef, type Ref } from 'react'\n\n// This is a compatibility hook to support React 18 and 19 refs.\n// In 19, a cleanup function from refs may be returned.\n// In 18, returning a cleanup function creates a warning.\n// Since we take userspace refs, we don't know ahead of time if a cleanup function will be returned.\n// This implements cleanup functions with the old behavior in 18.\n// We know refs are always called alternating with `null` and then `T`.\n// So a call with `null` means we need to call the previous cleanup functions.\nexport function useMergedRef<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  const cleanupA = useRef<(() => void) | null>(null)\n  const cleanupB = useRef<(() => void) | null>(null)\n\n  // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.\n  // (this happens often if the user doesn't pass a ref to Link/Form/Image)\n  // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),\n  // and the user might pass that ref into ref-merging library that doesn't support cleanup refs\n  // (because it hasn't been updated for React 19)\n  // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.\n  // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.\n  return useCallback(\n    (current: TElement | null): void => {\n      if (current === null) {\n        const cleanupFnA = cleanupA.current\n        if (cleanupFnA) {\n          cleanupA.current = null\n          cleanupFnA()\n        }\n        const cleanupFnB = cleanupB.current\n        if (cleanupFnB) {\n          cleanupB.current = null\n          cleanupFnB()\n        }\n      } else {\n        if (refA) {\n          cleanupA.current = applyRef(refA, current)\n        }\n        if (refB) {\n          cleanupB.current = applyRef(refB, current)\n        }\n      }\n    },\n    [refA, refB]\n  )\n}\n\nfunction applyRef<TElement>(\n  refA: NonNullable<Ref<TElement>>,\n  current: TElement\n) {\n  if (typeof refA === 'function') {\n    const cleanup = refA(current)\n    if (typeof cleanup === 'function') {\n      return cleanup\n    } else {\n      return () => refA(null)\n    }\n  } else {\n    refA.current = current\n    return () => {\n      refA.current = null\n    }\n  }\n}\n", "'use client'\n\nimport React, {\n  useRef,\n  useEffect,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n  forwardRef,\n  use,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport Head from '../shared/lib/head'\nimport { getImgProps } from '../shared/lib/get-img-props'\nimport type {\n  ImageProps,\n  ImgProps,\n  OnLoad,\n  OnLoadingComplete,\n  PlaceholderValue,\n} from '../shared/lib/get-img-props'\nimport type {\n  ImageConfigComplete,\n  ImageLoaderProps,\n} from '../shared/lib/image-config'\nimport { imageConfigDefault } from '../shared/lib/image-config'\nimport { ImageConfigContext } from '../shared/lib/image-config-context.shared-runtime'\nimport { warnOnce } from '../shared/lib/utils/warn-once'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\n\n// @ts-ignore - This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\nimport { useMergedRef } from './use-merged-ref'\n\n// This is replaced by webpack define plugin\nconst configEnv = process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete\n\nif (typeof window === 'undefined') {\n  ;(globalThis as any).__NEXT_IMAGE_IMPORTED = true\n}\n\nexport type { ImageLoaderProps }\nexport type ImageLoader = (p: ImageLoaderProps) => string\n\ntype ImgElementWithDataProp = HTMLImageElement & {\n  'data-loaded-src': string | undefined\n}\n\ntype ImageElementProps = ImgProps & {\n  unoptimized: boolean\n  placeholder: PlaceholderValue\n  onLoadRef: React.MutableRefObject<OnLoad | undefined>\n  onLoadingCompleteRef: React.MutableRefObject<OnLoadingComplete | undefined>\n  setBlurComplete: (b: boolean) => void\n  setShowAltText: (b: boolean) => void\n  sizesInput: string | undefined\n}\n\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(\n  img: ImgElementWithDataProp,\n  placeholder: PlaceholderValue,\n  onLoadRef: React.MutableRefObject<OnLoad | undefined>,\n  onLoadingCompleteRef: React.MutableRefObject<OnLoadingComplete | undefined>,\n  setBlurComplete: (b: boolean) => void,\n  unoptimized: boolean,\n  sizesInput: string | undefined\n) {\n  const src = img?.src\n  if (!img || img['data-loaded-src'] === src) {\n    return\n  }\n  img['data-loaded-src'] = src\n  const p = 'decode' in img ? img.decode() : Promise.resolve()\n  p.catch(() => {}).then(() => {\n    if (!img.parentElement || !img.isConnected) {\n      // Exit early in case of race condition:\n      // - onload() is called\n      // - decode() is called but incomplete\n      // - unmount is called\n      // - decode() completes\n      return\n    }\n    if (placeholder !== 'empty') {\n      setBlurComplete(true)\n    }\n    if (onLoadRef?.current) {\n      // Since we don't have the SyntheticEvent here,\n      // we must create one with the same shape.\n      // See https://reactjs.org/docs/events.html\n      const event = new Event('load')\n      Object.defineProperty(event, 'target', { writable: false, value: img })\n      let prevented = false\n      let stopped = false\n      onLoadRef.current({\n        ...event,\n        nativeEvent: event,\n        currentTarget: img,\n        target: img,\n        isDefaultPrevented: () => prevented,\n        isPropagationStopped: () => stopped,\n        persist: () => {},\n        preventDefault: () => {\n          prevented = true\n          event.preventDefault()\n        },\n        stopPropagation: () => {\n          stopped = true\n          event.stopPropagation()\n        },\n      })\n    }\n    if (onLoadingCompleteRef?.current) {\n      onLoadingCompleteRef.current(img)\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const origSrc = new URL(src, 'http://n').searchParams.get('url') || src\n      if (img.getAttribute('data-nimg') === 'fill') {\n        if (!unoptimized && (!sizesInput || sizesInput === '100vw')) {\n          let widthViewportRatio =\n            img.getBoundingClientRect().width / window.innerWidth\n          if (widthViewportRatio < 0.6) {\n            if (sizesInput === '100vw') {\n              warnOnce(\n                `Image with src \"${origSrc}\" has \"fill\" prop and \"sizes\" prop of \"100vw\", but image is not rendered at full viewport width. Please adjust \"sizes\" to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`\n              )\n            } else {\n              warnOnce(\n                `Image with src \"${origSrc}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`\n              )\n            }\n          }\n        }\n        if (img.parentElement) {\n          const { position } = window.getComputedStyle(img.parentElement)\n          const valid = ['absolute', 'fixed', 'relative']\n          if (!valid.includes(position)) {\n            warnOnce(\n              `Image with src \"${origSrc}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid\n                .map(String)\n                .join(',')}.`\n            )\n          }\n        }\n        if (img.height === 0) {\n          warnOnce(\n            `Image with src \"${origSrc}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`\n          )\n        }\n      }\n\n      const heightModified =\n        img.height.toString() !== img.getAttribute('height')\n      const widthModified = img.width.toString() !== img.getAttribute('width')\n      if (\n        (heightModified && !widthModified) ||\n        (!heightModified && widthModified)\n      ) {\n        warnOnce(\n          `Image with src \"${origSrc}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`\n        )\n      }\n    }\n  })\n}\n\nfunction getDynamicProps(\n  fetchPriority?: string\n): Record<string, string | undefined> {\n  if (Boolean(use)) {\n    // In React 19.0.0 or newer, we must use camelCase\n    // prop to avoid \"Warning: Invalid DOM property\".\n    // See https://github.com/facebook/react/pull/25927\n    return { fetchPriority }\n  }\n  // In React 18.2.0 or older, we must use lowercase prop\n  // to avoid \"Warning: Invalid DOM property\".\n  return { fetchpriority: fetchPriority }\n}\n\nconst ImageElement = forwardRef<HTMLImageElement | null, ImageElementProps>(\n  (\n    {\n      src,\n      srcSet,\n      sizes,\n      height,\n      width,\n      decoding,\n      className,\n      style,\n      fetchPriority,\n      placeholder,\n      loading,\n      unoptimized,\n      fill,\n      onLoadRef,\n      onLoadingCompleteRef,\n      setBlurComplete,\n      setShowAltText,\n      sizesInput,\n      onLoad,\n      onError,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const ownRef = useCallback(\n      (img: ImgElementWithDataProp | null) => {\n        if (!img) {\n          return\n        }\n        if (onError) {\n          // If the image has an error before react hydrates, then the error is lost.\n          // The workaround is to wait until the image is mounted which is after hydration,\n          // then we set the src again to trigger the error handler (if there was an error).\n          // eslint-disable-next-line no-self-assign\n          img.src = img.src\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          if (!src) {\n            console.error(`Image is missing required \"src\" property:`, img)\n          }\n          if (img.getAttribute('alt') === null) {\n            console.error(\n              `Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`\n            )\n          }\n        }\n        if (img.complete) {\n          handleLoading(\n            img,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            unoptimized,\n            sizesInput\n          )\n        }\n      },\n      [\n        src,\n        placeholder,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        onError,\n        unoptimized,\n        sizesInput,\n      ]\n    )\n\n    const ref = useMergedRef(forwardedRef, ownRef)\n\n    return (\n      <img\n        {...rest}\n        {...getDynamicProps(fetchPriority)}\n        // It's intended to keep `loading` before `src` because React updates\n        // props in order which causes Safari/Firefox to not lazy load properly.\n        // See https://github.com/facebook/react/issues/25883\n        loading={loading}\n        width={width}\n        height={height}\n        decoding={decoding}\n        data-nimg={fill ? 'fill' : '1'}\n        className={className}\n        style={style}\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        sizes={sizes}\n        srcSet={srcSet}\n        src={src}\n        ref={ref}\n        onLoad={(event) => {\n          const img = event.currentTarget as ImgElementWithDataProp\n          handleLoading(\n            img,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            unoptimized,\n            sizesInput\n          )\n        }}\n        onError={(event) => {\n          // if the real image fails to load, this will ensure \"alt\" is visible\n          setShowAltText(true)\n          if (placeholder !== 'empty') {\n            // If the real image fails to load, this will still remove the placeholder.\n            setBlurComplete(true)\n          }\n          if (onError) {\n            onError(event)\n          }\n        }}\n      />\n    )\n  }\n)\n\nfunction ImagePreload({\n  isAppRouter,\n  imgAttributes,\n}: {\n  isAppRouter: boolean\n  imgAttributes: ImgProps\n}) {\n  const opts = {\n    as: 'image',\n    imageSrcSet: imgAttributes.srcSet,\n    imageSizes: imgAttributes.sizes,\n    crossOrigin: imgAttributes.crossOrigin,\n    referrerPolicy: imgAttributes.referrerPolicy,\n    ...getDynamicProps(imgAttributes.fetchPriority),\n  }\n\n  if (isAppRouter && ReactDOM.preload) {\n    // See https://github.com/facebook/react/pull/26940\n    ReactDOM.preload(\n      imgAttributes.src,\n      // @ts-expect-error TODO: upgrade to `@types/react-dom@18.3.x`\n      opts\n    )\n    return null\n  }\n\n  return (\n    <Head>\n      <link\n        key={\n          '__nimg-' +\n          imgAttributes.src +\n          imgAttributes.srcSet +\n          imgAttributes.sizes\n        }\n        rel=\"preload\"\n        // Note how we omit the `href` attribute, as it would only be relevant\n        // for browsers that do not support `imagesrcset`, and in those cases\n        // it would cause the incorrect image to be preloaded.\n        //\n        // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n        href={imgAttributes.srcSet ? undefined : imgAttributes.src}\n        {...opts}\n      />\n    </Head>\n  )\n}\n\n/**\n * The `Image` component is used to optimize images.\n *\n * Read more: [Next.js docs: `Image`](https://nextjs.org/docs/app/api-reference/components/image)\n */\nexport const Image = forwardRef<HTMLImageElement | null, ImageProps>(\n  (props, forwardedRef) => {\n    const pagesRouter = useContext(RouterContext)\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter\n\n    const configContext = useContext(ImageConfigContext)\n    const config = useMemo(() => {\n      const c = configEnv || configContext || imageConfigDefault\n      const allSizes = [...c.deviceSizes, ...c.imageSizes].sort((a, b) => a - b)\n      const deviceSizes = c.deviceSizes.sort((a, b) => a - b)\n      const qualities = c.qualities?.sort((a, b) => a - b)\n      return { ...c, allSizes, deviceSizes, qualities }\n    }, [configContext])\n\n    const { onLoad, onLoadingComplete } = props\n    const onLoadRef = useRef(onLoad)\n\n    useEffect(() => {\n      onLoadRef.current = onLoad\n    }, [onLoad])\n\n    const onLoadingCompleteRef = useRef(onLoadingComplete)\n\n    useEffect(() => {\n      onLoadingCompleteRef.current = onLoadingComplete\n    }, [onLoadingComplete])\n\n    const [blurComplete, setBlurComplete] = useState(false)\n    const [showAltText, setShowAltText] = useState(false)\n\n    const { props: imgAttributes, meta: imgMeta } = getImgProps(props, {\n      defaultLoader,\n      imgConf: config,\n      blurComplete,\n      showAltText,\n    })\n\n    return (\n      <>\n        {\n          <ImageElement\n            {...imgAttributes}\n            unoptimized={imgMeta.unoptimized}\n            placeholder={imgMeta.placeholder}\n            fill={imgMeta.fill}\n            onLoadRef={onLoadRef}\n            onLoadingCompleteRef={onLoadingCompleteRef}\n            setBlurComplete={setBlurComplete}\n            setShowAltText={setShowAltText}\n            sizesInput={props.sizes}\n            ref={forwardedRef}\n          />\n        }\n        {imgMeta.priority ? (\n          <ImagePreload\n            isAppRouter={isAppRouter}\n            imgAttributes={imgAttributes}\n          />\n        ) : null}\n      </>\n    )\n  }\n)\n", "import type { ImageConfigComplete, ImageLoaderProps } from './image-config'\nimport type { ImageProps, ImageLoader, StaticImageData } from './get-img-props'\n\nimport { getImgProps } from './get-img-props'\nimport { Image } from '../../client/image-component'\n\n// @ts-ignore - This is replaced by webpack alias\nimport defaultLoader from 'next/dist/shared/lib/image-loader'\n\n/**\n * For more advanced use cases, you can call `getImageProps()`\n * to get the props that would be passed to the underlying `<img>` element,\n * and instead pass to them to another component, style, canvas, etc.\n *\n * Read more: [Next.js docs: `getImageProps`](https://nextjs.org/docs/app/api-reference/components/image#getimageprops)\n */\nexport function getImageProps(imgProps: ImageProps) {\n  const { props } = getImgProps(imgProps, {\n    defaultLoader,\n    // This is replaced by webpack define plugin\n    imgConf: process.env.__NEXT_IMAGE_OPTS as any as ImageConfigComplete,\n  })\n  // Normally we don't care about undefined props because we pass to JSX,\n  // but this exported function could be used by the end user for anything\n  // so we delete undefined props to clean it up a little.\n  for (const [key, value] of Object.entries(props)) {\n    if (value === undefined) {\n      delete props[key as keyof typeof props]\n    }\n  }\n  return { props }\n}\n\nexport default Image\n\nexport type { ImageProps, ImageLoaderProps, ImageLoader, StaticImageData }\n", "module.exports = require('./dist/shared/lib/image-external')\n"],
  "mappings": "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",
  "names": ["getImageBlurSvg", "widthInt", "heightInt", "blurWidth", "blurHeight", "blurDataURL", "objectFit", "std", "svgWidth", "svgHeight", "viewBox", "preserveAspectRatio", "getImgProps", "VALID_LOADING_VALUES", "undefined", "INVALID_BACKGROUND_SIZE_VALUES", "isStaticRequire", "src", "default", "isStaticImageData", "isStaticImport", "allImgs", "Map", "perfObserver", "getInt", "x", "Number", "isFinite", "NaN", "test", "parseInt", "getWidths", "width", "sizes", "deviceSizes", "allSizes", "viewportWidthRe", "percentSizes", "match", "exec", "push", "length", "smallestRatio", "Math", "min", "widths", "filter", "s", "kind", "Set", "map", "w", "find", "p", "generateImgAttrs", "config", "unoptimized", "quality", "loader", "srcSet", "last", "i", "join", "_state", "priority", "loading", "className", "height", "fill", "style", "overrideSrc", "onLoad", "onLoadingComplete", "placeholder", "blurDataURL", "fetchPriority", "decoding", "layout", "objectFit", "objectPosition", "lazyBoundary", "lazyRoot", "rest", "imgConf", "showAltText", "blurComplete", "defaultLoader", "c", "imageConfigDefault", "imageSizes", "sort", "a", "b", "qualities", "Error", "isDefaultLoader", "customImageLoader", "obj", "_", "opts", "layoutToStyle", "intrinsic", "maxWidth", "responsive", "layoutToSizes", "layoutStyle", "layoutSizes", "staticSrc", "widthInt", "heightInt", "blurWidth", "blurHeight", "staticImageData", "JSON", "stringify", "ratio", "round", "isLazy", "startsWith", "dangerouslyAllowSVG", "split", "endsWith", "qualityInt", "process", "output", "position", "isNaN", "includes", "String", "warnOnce", "VALID_BLUR_EXT", "urlStr", "url", "URL", "err", "pathname", "search", "legacyKey", "legacyValue", "Object", "entries", "window", "PerformanceObserver", "entryList", "entry", "getEntries", "imgSrc", "element", "lcpImage", "get", "observe", "type", "buffered", "console", "error", "imgStyle", "assign", "left", "top", "right", "bottom", "color", "backgroundImage", "getImageBlurSvg", "backgroundSize", "placeholderStyle", "backgroundPosition", "backgroundRepeat", "imgAttributes", "fullUrl", "e", "location", "href", "set", "props", "meta", "DEFAULT_Q", "defaultLoader", "config", "src", "width", "quality", "process", "missingValues", "push", "length", "Error", "join", "JSON", "stringify", "startsWith", "localPatterns", "env", "NEXT_RUNTIME", "hasLocalMatch", "require", "domains", "remotePatterns", "parsedSrc", "URL", "err", "console", "error", "hasRemoteMatch", "hostname", "qualities", "includes", "q", "reduce", "prev", "cur", "Math", "abs", "path", "encodeURIComponent", "NEXT_DEPLOYMENT_ID", "__next_img_default", "useMergedRef", "refA", "refB", "cleanupA", "useRef", "cleanupB", "useCallback", "current", "cleanupFnA", "cleanupFnB", "applyRef", "cleanup", "Image", "configEnv", "process", "env", "__NEXT_IMAGE_OPTS", "window", "globalThis", "__NEXT_IMAGE_IMPORTED", "handleLoading", "img", "placeholder", "onLoadRef", "onLoadingCompleteRef", "setBlurComplete", "unoptimized", "sizesInput", "src", "p", "decode", "Promise", "resolve", "catch", "then", "parentElement", "isConnected", "current", "event", "Event", "Object", "defineProperty", "writable", "value", "prevented", "stopped", "nativeEvent", "currentTarget", "target", "isDefaultPrevented", "isPropagationStopped", "persist", "preventDefault", "stopPropagation", "origSrc", "URL", "searchParams", "get", "getAttribute", "widthViewportRatio", "getBoundingClientRect", "width", "innerWidth", "warnOnce", "position", "getComputedStyle", "valid", "includes", "map", "String", "join", "height", "heightModified", "toString", "widthModified", "getDynamicProps", "fetchPriority", "Boolean", "use", "fetchpriority", "ImageElement", "forwardRef", "forwardedRef", "srcSet", "sizes", "decoding", "className", "style", "loading", "fill", "setShowAltText", "onLoad", "onError", "rest", "ownRef", "useCallback", "console", "error", "complete", "ref", "useMergedRef", "data-nimg", "ImagePreload", "isAppRouter", "imgAttributes", "opts", "as", "imageSrcSet", "imageSizes", "crossOrigin", "referrerPolicy", "ReactDOM", "preload", "Head", "link", "rel", "href", "undefined", "props", "pagesRouter", "useContext", "RouterContext", "configContext", "ImageConfigContext", "config", "useMemo", "c", "imageConfigDefault", "allSizes", "deviceSizes", "sort", "a", "b", "qualities", "onLoadingComplete", "useRef", "useEffect", "blurComplete", "useState", "showAltText", "meta", "imgMeta", "getImgProps", "defaultLoader", "imgConf", "priority", "getImageProps", "imgProps", "props", "getImgProps", "defaultLoader", "imgConf", "process", "env", "__NEXT_IMAGE_OPTS", "key", "value", "Object", "entries", "undefined", "Image"]
}
